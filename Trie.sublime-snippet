<snippet>
	<content><![CDATA[
struct Trie {
	vector<vector<int>>tr;
	vector<int>ends;
	int N;
	Trie() {
		tr.resize(1, vector<int>(26));
		ends.resize(1);
		N = 0;
	}

	void insert(string word) {
		int n = word.size();
		int curr = 0;
		for (int i = 0; i < n; i++) {
			if (tr[curr][word[i] - 'a'] == 0) {
				tr.push_back(vector<int>(26));
				ends.push_back(0);
				tr[curr][word[i] - 'a'] = ++N;
			}
			curr = tr[curr][word[i] - 'a'];
		}
		ends[curr] = 1;
	}

	bool search(string word) {
		int n = word.size();
		int curr = 0;
		for (int i = 0; i < n; i++) {
			if (tr[curr][word[i] - 'a'] == 0) {
				return false;
			}
			curr = tr[curr][word[i] - 'a'];
		}
		return ends[curr];

	}

	bool startsWith(string prefix) {
		int n = prefix.size();
		int curr = 0;
		for (int i = 0; i < n; i++) {
			if (tr[curr][prefix[i] - 'a'] == 0) {
				return false;
			}
			curr = tr[curr][prefix[i] - 'a'];
		}
		return true;
	}
};

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>Trie</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
